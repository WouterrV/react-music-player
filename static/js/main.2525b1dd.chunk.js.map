{"version":3,"sources":["data.js","components/Player.js","components/Song.js","components/LibrarySong.js","ThemeContext.js","components/Library.js","components/ThemeToggler.jsx","components/Nav.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["chillHop","name","cover","artist","audio","color","id","uuidv4","active","Player","currentSong","setCurrentSong","isPlaying","setIsPlaying","songs","setSongs","audioRef","useRef","useEffect","newSongs","map","song","timeUpdateHandler","e","current","target","currentTime","duration","roundedAnimationPercent","Math","round","setSongInfo","songInfo","animationPercentage","formatTime","time","floor","slice","skipHandler","direction","currentIndex","findIndex","s","newIndex","maxIndex","length","useState","trackAnim","transform","myGradient","className","style","background","type","min","max","value","onChange","newTime","size","icon","faAngleLeft","onClick","pause","play","console","log","faPause","faPlay","faAngleRight","ref","src","onTimeUpdate","onLoadedMetadata","onLoadedData","onEnded","Song","alt","LibrarySong","ThemeContext","createContext","Library","libraryStatus","setLibraryStatus","useContext","theme","setTheme","undefined","Error","songComponents","ThemeToggler","changeTheme","Nav","libraryToggleHandler","faMusic","App","data","Provider","rel","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2525b1dd.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import React, {useRef, useState, useEffect} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faPlay, faAngleLeft, faAngleRight, faPause} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Player = ( {\r\n        currentSong, setCurrentSong,\r\n        isPlaying, setIsPlaying,\r\n        songs, setSongs\r\n    } ) => {\r\n\r\n        // Ref\r\n    const audioRef = useRef(null);\r\n\r\n    // Event Handlers\r\n    useEffect( () => { \r\n\r\n        let newSongs = songs.map\r\n        (\r\n            (song) => \r\n            { \r\n                //console.log(song);\r\n\r\n                if(song.id == currentSong.id){\r\n                    return {...song, active: true}\r\n                }\r\n\r\n                else {\r\n                    return {...song, active: false}\r\n                }\r\n\r\n            }\r\n        );\r\n\r\n        setSongs( newSongs);\r\n        \r\n    }, [currentSong])\r\n\r\n    const playSongHandler = () => {\r\n\r\n        if(isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(false);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(true);\r\n        }\r\n\r\n        console.log(audioRef.current);\r\n    }\r\n\r\n    const timeUpdateHandler = (e) => {\r\n        // update songInfo state here\r\n        const current = e.target.currentTime;\r\n        const duration = e.target.duration;\r\n        \r\n        // Calculate percentage\r\n        const  roundedAnimationPercent = Math.round(current/duration*100);\r\n\r\n        setSongInfo({\r\n            ...songInfo, currentTime: current, duration, animationPercentage: roundedAnimationPercent\r\n        })\r\n    }\r\n\r\n    const formatTime = (time) => {\r\n        let minutes = Math.floor(time / 60);\r\n        let seconds = (\"0\" + Math.floor(time % 60)).slice(-2);\r\n        let niceTime = minutes + \":\" + seconds;\r\n        return niceTime;\r\n    }\r\n\r\n    const dragHandler = (e) => {\r\n        let newTime = e.target.value;\r\n        setSongInfo({...songInfo, currentTime: newTime});\r\n        audioRef.current.currentTime = newTime;\r\n    }\r\n\r\n    const skipHandler = (direction) => {\r\n        \r\n        // Find out: is song playing? Then back == return to 0th second\r\n        if (isPlaying && direction == 'back'){\r\n            audioRef.current.currentTime = 0;\r\n            return;\r\n        }\r\n\r\n        let currentIndex = songs.findIndex\r\n        ( \r\n            (s)=>\r\n            {return s.id == currentSong.id} \r\n        );\r\n\r\n\r\n        let newIndex = -1; // default value\r\n        let maxIndex = songs.length-1; // 3 songs, index = 0,1,2 so we need -1 here\r\n\r\n        if (direction == \"forward\"){ \r\n            newIndex = currentIndex + 1\r\n            if (newIndex > maxIndex) {newIndex = 0;}\r\n          }\r\n\r\n        if (direction == \"back\"){ \r\n            newIndex = currentIndex - 1  \r\n            if (newIndex < 0) { newIndex = maxIndex;}\r\n        }\r\n\r\n        //console.log(\"Current, new index is: \" + currentIndex + \",\" + newIndex);\r\n        setCurrentSong( songs[newIndex] );\r\n\r\n    }\r\n\r\n    const endedHandler = () => {\r\n        // if playing, then go to next song\r\n        if (isPlaying){\r\n            skipHandler('forward');\r\n        }\r\n    }\r\n\r\n    // State\r\n    const [songInfo, setSongInfo] = useState(\r\n        {\r\n            currentTime: 0,\r\n            duration: 0,\r\n            animationPercentage: 0,\r\n        }\r\n    )\r\n\r\n    const onLoadedHandler = (e) => {\r\n        if (isPlaying){\r\n            e.target.play();\r\n        }\r\n    }\r\n\r\n\r\n    // Add the styles\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n\r\n    const myGradient = `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1] } )`\r\n\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{ formatTime(songInfo.currentTime) }</p>\r\n\r\n                <div className=\"track\" \r\n                    style=\r\n                    { \r\n                        {\r\n                            background: myGradient\r\n                        } \r\n                    }\r\n                    >\r\n                    <input \r\n                        type=\"range\"\r\n                        min={0}\r\n                        max={songInfo.duration || 0} \r\n                        value={songInfo.currentTime}\r\n                        onChange={dragHandler}\r\n                    />\r\n                    <div className=\"animate-track\" style={trackAnim}></div>\r\n                </div>\r\n                \r\n                <p>{songInfo.duration? formatTime(songInfo.duration) : \"0:00\" }</p>\r\n            </div>\r\n\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft}\r\n                onClick={ ()=> skipHandler(\"back\") } />\r\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" \r\n                icon={isPlaying? faPause : faPlay }\r\n                 />\r\n                <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faAngleRight}\r\n                onClick={ ()=> skipHandler(\"forward\") } />\r\n                \r\n            </div>\r\n\r\n            <audio\r\n                ref={audioRef} \r\n                src={currentSong.audio} \r\n                onTimeUpdate={timeUpdateHandler} \r\n                onLoadedMetadata={timeUpdateHandler}\r\n                onLoadedData={onLoadedHandler}\r\n                onEnded = { endedHandler }\r\n             ></audio>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nconst Song = ( {currentSong, isPlaying} ) => {\r\n\r\n    return(\r\n        <div className=\"song-container\">\r\n            <img src={currentSong.cover} alt={currentSong.name} className={isPlaying? \"rotate\" : \"\"  } />\r\n            <h2> {currentSong.name} </h2>\r\n            <h3> {currentSong.artist} </h3>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Song;","import React from 'react';\r\n\r\nconst LibrarySong = ( {currentSong, setCurrentSong, songs, setSongs} ) => {\r\n\r\n    //console.log('were in LibrarySong, currentSong:' + currentSong);\r\n\r\n    const songSelectHandler = (e) => \r\n    {\r\n        setCurrentSong(currentSong);\r\n\r\n        // Modify list of songs to update the active-property\r\n        const newSongs = songs.map(song => \r\n        {\r\n            if(song.id == currentSong.id)\r\n            {\r\n                return ( {...song, active: true,} );\r\n            } else {\r\n                return ( {...song, active: false,} );\r\n            }\r\n\r\n        })\r\n\r\n        setSongs(newSongs);\r\n    }\r\n\r\n    return(\r\n        <div className={`library-song ${currentSong.active ? 'selected' : 'unsel'}`} onClick={songSelectHandler} >\r\n            <img src={currentSong.cover} alt={currentSong.name} />\r\n\r\n            <div className=\"song-description\">\r\n                <h3> {currentSong.name} </h3>\r\n                <h4> {currentSong.artist} </h4>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LibrarySong;","import {createContext} from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nlet changeTheme = ( {theme, setTheme} ) => {\r\n    if (theme == \"light\") {\r\n        setTheme(\"dark\")\r\n    } else if (theme == \"dark\"){\r\n        setTheme(\"light\");\r\n    } else {\r\n        throw new Error('Theme is in invalid state');\r\n    }\r\n}\r\n\r\nexport {changeTheme};\r\n\r\nexport default ThemeContext;\r\n","import React, {useContext} from 'react';\r\nimport LibrarySong from './LibrarySong';\r\nimport '../styles/_library.scss';\r\nimport ThemeContext, {changeTheme} from '../ThemeContext';\r\n\r\n\r\nconst Library = ( {songs, setCurrentSong, setSongs, libraryStatus, setLibraryStatus} ) => {\r\n\r\n    //console.log('were in library, here are songs:', songs);\r\n\r\n    const {theme, setTheme} = useContext(ThemeContext);\r\n\r\n    // todo: refactor this to be in ThemeContext, so we can DRY up our code\r\n    if (theme == undefined){\r\n        throw new Error('theme undefined, are you consuming a context in a component thats a child of the right context provider?')\r\n    }\r\n\r\n    let libraryToggleHandler = () => {\r\n        setLibraryStatus(!libraryStatus);\r\n    }\r\n\r\n\r\n    let songComponents = songs.map(\r\n         (song) => { \r\n             //console.log(song);\r\n            return (< LibrarySong currentSong={ song } key={song.name + song.artist }\r\n                 setCurrentSong={setCurrentSong} songs={songs} setSongs={setSongs} />  );\r\n            }\r\n          );\r\n\r\n\r\n    return(\r\n        \r\n\r\n        <div className={`library ${libraryStatus? \"active-library\": \"\"}  ${theme}`}>\r\n            \r\n            <h2 onClick={libraryToggleHandler} >Library</h2>\r\n            \r\n            <div className=\"library-songs\">\r\n                {songComponents}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Library;","import React,  {useContext} from 'react';\r\nimport ThemeContext, {changeTheme} from '../ThemeContext';\r\n\r\n\r\nconst ThemeToggler = () => { \r\n\r\n    const {theme, setTheme} = useContext(ThemeContext);\r\n\r\n    if (theme == undefined){\r\n        throw new Error('theme undefined, are you using a theme in a component thats a child of the right context provider?')\r\n    }\r\n\r\n\r\n    return(\r\n        <button id=\"togglyWoggly\" onClick={() => changeTheme({theme, setTheme}) } >\r\n            {theme} theme\r\n        </button>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ThemeToggler;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ThemeToggler from './ThemeToggler';\r\n\r\n\r\nlet libraryToggleHandler = (libraryStatus, setLibraryStatus) => {\r\n    setLibraryStatus(!libraryStatus);\r\n}\r\n\r\nlet Nav = ( {libraryStatus, setLibraryStatus}  ) => {\r\n\r\n\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <ThemeToggler></ThemeToggler>\r\n            <button onClick={() => { libraryToggleHandler(libraryStatus, setLibraryStatus) }}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React ,{useState} from 'react';\nimport './styles/app.scss';\nimport data from './data';\n\n// Adding components\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n\n// Context\nimport ThemeContext from './ThemeContext';\n\nfunction App() {\n\n  // State\n  const [songs, setSongs] = useState( data() );\n  const [currentSong, setCurrentSong] = useState( songs[0] );\n  const [isPlaying, setIsPlaying] = useState (false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  // Let's try a theme-component using context\n  const [theme, setTheme] = useState(\"dark\");\n\n\n  return (\n    <ThemeContext.Provider value={{theme, setTheme}}>\n      <div className={`App ${theme}`}>\n\n        <div id=\"rightColumn\" className={`${libraryStatus ? \"library-active\" : \"\"} ${theme}`}>\n            <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n\n            <Song currentSong={currentSong} isPlaying={isPlaying} />\n\n            <Player \n              currentSong={currentSong} setCurrentSong={setCurrentSong}\n              isPlaying = {isPlaying} setIsPlaying = {setIsPlaying}\n              songs = {songs} setSongs={setSongs}\n            />\n        </div>\n        \n\n        <Library songs={songs} setSongs={setSongs} setCurrentSong={setCurrentSong} \n        libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n\n        {/* Load fonts globally    */   }\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"/>\n        <link href=\"https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap\" rel=\"stylesheet\"></link> \n\n\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}